{
    "schemaVersion": "4",
    "info": {
        "name": "post-amplifycentralwebhookhandler"
    },
    "parameter": {
        "properties": {
            "request": {
                "description": "The request"
            },
            "config": {
                "type": "object",
                "description": "The service's configuration"
            },
            "env": {
                "type": "object",
                "description": "The host OS environment"
            }
        },
        "additionalProperties": false
    },
    "start": "javascript.1",
    "nodes": {
        "http.1": {
            "type": "nodehandler://axway-flow/http",
            "name": "Set HTTP Success Response",
            "method": "setresponse",
            "parameters": [
                {
                    "name": "status",
                    "type": "number",
                    "value": "200",
                    "metaName": "Status",
                    "metaDescription": "The HTTP status code"
                }
            ],
            "outputs": {
                "next": {
                    "context": "$.response",
                    "routes": [],
                    "metaName": "Next"
                }
            },
            "metaMethod": "Set HTTP Response"
        },
        "javascript.1": {
            "type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
            "name": "Check Payload",
            "method": "Execute",
            "parameters": [
                {
                    "name": "data",
                    "type": "jsonpath",
                    "value": "$",
                    "metaName": "Data",
                    "metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
                },
                {
                    "name": "code",
                    "type": "string",
                    "value": "\"let body = data.request.body;\\n  console.log(body);\\n  return (body.type === 'SubResourceUpdated') && (body.metadata.subresource === 'approval') && (body.payload.approval.state === 'pending');\""
                }
            ],
            "outputs": {
                "next": {
                    "context": "$.result",
                    "routes": [
                        "condition.1"
                    ],
                    "metaName": "Next"
                },
                "error": {
                    "context": "$.error",
                    "routes": [],
                    "metaName": "Error"
                }
            },
            "metaMethod": "Execute"
        },
        "condition.1": {
            "type": "nodehandler://axway-flow/condition",
            "name": "Equals",
            "method": "equals",
            "parameters": [
                {
                    "name": "value",
                    "type": "boolean",
                    "value": "true",
                    "metaName": "Value",
                    "metaDescription": "The value to test input against."
                },
                {
                    "name": "source",
                    "type": "jsonpath",
                    "value": "$.result",
                    "metaName": "Source",
                    "metaDescription": "The input to test."
                }
            ],
            "outputs": {
                "true": {
                    "routes": [
                        "javascript.4"
                    ],
                    "context": "$.equals",
                    "metaName": "True"
                },
                "false": {
                    "routes": [
                        "http.1"
                    ],
                    "context": "$.equals",
                    "metaName": "False"
                }
            },
            "metaMethod": "Equals"
        },
        "javascript.2": {
            "type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
            "name": "prepareSendToMSTeams",
            "method": "Execute",
            "parameters": [
                {
                    "name": "data",
                    "type": "jsonpath",
                    "value": "$",
                    "metaName": "Data",
                    "metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
                },
                {
                    "name": "code",
                    "type": "string",
                    "value": "\"let url=data.env.MS_TEAMS_WEBHOOK_URL;\\n  console.log(\\\"**********************\\\");\\n   console.log(url);\\n  console.log(\\\"**********************\\\");\\n  let productName=data.request.body.payload.spec.product;\\n  let productUrl=data.env.API_CENTRAL_URL+'/products/details/'+data.request.body.payload.spec.product;\\n  let subscriptionName=data.request.body.payload.title;\\n  let subscriptionUrl=data.env.API_CENTRAL_URL+'/marketplace/subscriptions';\\n  let requestorName=data.getUserResponse.body.result.firstname+' '+data.getUserResponse.body.result.lastname;\\n  let requestorEmail=data.getUserResponse.body.result.email;\\n  let requestorEmailUrl='mailTo:'+data.getUserResponse.body.result.email;\\n  let selfLink = data.env.API_CENTRAL_URL+'/apis'+data.request.body.payload.metadata.selfLink+'/approval';\\n  \\n  let body = {\\n    \\\"@type\\\": \\\"MessageCard\\\",\\n    \\\"@context\\\": \\\"http://schema.org/extensions\\\",\\n    \\\"themeColor\\\": \\\"0076D7\\\",\\n    \\\"summary\\\": \\\"Marketplace Product Subscription Approval REQUESTED\\\",\\n    \\\"sections\\\": [{\\n        \\\"activityTitle\\\": \\\"Marketplace Product Subscription Approval REQUESTED\\\",\\n        \\\"activitySubtitle\\\": \\\"Please review and approve or reject the request from the Jira Incident\\\",\\n        \\\"markdown\\\": true,\\n        \\\"facts\\\": [{\\n            \\\"name\\\": \\\"Product\\\",\\n          \\t\\\"value\\\": \\\"[\\\"+productName+\\\"](\\\"+productUrl+\\\")\\\"\\n        },{\\n            \\\"name\\\": \\\"Subscription\\\",\\n            \\\"value\\\": \\\"[\\\"+subscriptionName+\\\"](\\\"+subscriptionUrl+\\\")\\\"\\n        },{\\n            \\\"name\\\": \\\"Requestor Name\\\",\\n            \\\"value\\\": requestorName\\n        },{\\n            \\\"name\\\": \\\"Requestor Email\\\",\\n            \\\"value\\\": \\\"[\\\"+requestorEmail+\\\"](\\\"+requestorEmailUrl+\\\")\\\"\\n        }],\\n    }],\\n    \\\"potentialAction\\\": [\\n      {\\n  \\t\\t\\t\\\"@type\\\": \\\"OpenUri\\\",\\n  \\t\\t\\t\\\"name\\\": \\\"View Incident\\\",\\n  \\t\\t\\t\\\"targets\\\": [\\n  \\t\\t\\t\\t{\\n  \\t\\t\\t\\t\\t\\\"os\\\": \\\"default\\\",\\n  \\t\\t\\t\\t\\t\\\"uri\\\": data.env.JIRA_URL+'/browse/'+data.createIncidentResponse.body.key\\n  \\t\\t\\t\\t}\\n  \\t\\t\\t]\\n  \\t\\t}\\n    ]\\n   };\\n  \\n  return {url,body};\"",
                    "metaName": "Code",
                    "metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
                }
            ],
            "outputs": {
                "next": {
                    "context": "$.result",
                    "routes": [
                        "rest.1"
                    ],
                    "metaName": "Next"
                },
                "error": {
                    "context": "$.error",
                    "routes": [],
                    "metaName": "Error"
                }
            },
            "metaMethod": "Execute"
        },
        "rest.1": {
            "type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
            "name": "sendToMSTeams",
            "method": "post",
            "parameters": [
                {
                    "name": "body",
                    "type": "jsonpath",
                    "value": "$.result.body",
                    "metaName": "Body",
                    "metaDescription": "The content to send."
                },
                {
                    "name": "url",
                    "type": "jsonpath",
                    "value": "$.result.url",
                    "metaName": "URL",
                    "metaDescription": "The target URL."
                }
            ],
            "outputs": {
                "2xx": {
                    "routes": [
                        "http.1"
                    ],
                    "context": "$.response",
                    "metaName": "2XX"
                },
                "3xx": {
                    "routes": [
                        "http.1"
                    ],
                    "context": "$.response",
                    "metaName": "3XX"
                },
                "4xx": {
                    "routes": [
                        "http.1"
                    ],
                    "context": "$.response",
                    "metaName": "4XX"
                },
                "5xx": {
                    "routes": [
                        "http.1"
                    ],
                    "context": "$.response",
                    "metaName": "5XX"
                },
                "error": {
                    "routes": [
                        "http.1"
                    ],
                    "context": "$.error",
                    "metaName": "Error"
                }
            },
            "metaMethod": "POST"
        },
        "javascript.3": {
            "type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
            "name": "prepareGetUser",
            "method": "Execute",
            "parameters": [
                {
                    "name": "data",
                    "type": "jsonpath",
                    "value": "$",
                    "metaName": "Data",
                    "metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
                },
                {
                    "name": "code",
                    "type": "string",
                    "value": "\"let userId = data.request.body.payload.metadata.audit.createUserId;\\n  let url = 'https://platform.axway.com/api/v1/user/'+userId;\\n  let headers = {\\n    'Content-Type': 'application/json',\\n    Authorization: 'Bearer '+data.getTokenResponse.body.access_token\\n  };\\n    console.log(\\\"*************** PREPARE USER *******************\\\");\\n    console.log(userId);\\n    console.log(\\\"**********************************\\\");\\n  return {url,headers};\"",
                    "metaName": "Code",
                    "metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
                }
            ],
            "outputs": {
                "next": {
                    "context": "$.result",
                    "routes": [
                        "rest.2"
                    ],
                    "metaName": "Next"
                },
                "error": {
                    "context": "$.error",
                    "routes": [],
                    "metaName": "Error"
                }
            },
            "metaMethod": "Execute"
        },
        "rest.2": {
            "type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
            "name": "getUser",
            "method": "get",
            "parameters": [
                {
                    "name": "url",
                    "type": "jsonpath",
                    "value": "$.result.url",
                    "metaName": "URL",
                    "metaDescription": "The target URL."
                },
                {
                    "name": "headers",
                    "type": "jsonpath",
                    "value": "$.result.headers",
                    "metaName": "Headers",
                    "metaDescription": "The HTTP headers to set."
                }
            ],
            "outputs": {
                "2xx": {
                    "routes": [
                        "javascript.5"
                    ],
                    "context": "$.getUserResponse",
                    "metaName": "2XX"
                },
                "3xx": {
                    "routes": [],
                    "context": "$.response",
                    "metaName": "3XX"
                },
                "4xx": {
                    "routes": [],
                    "context": "$.response",
                    "metaName": "4XX"
                },
                "5xx": {
                    "routes": [],
                    "context": "$.response",
                    "metaName": "5XX"
                },
                "error": {
                    "routes": [],
                    "context": "$.error",
                    "metaName": "Error"
                }
            },
            "metaMethod": "GET"
        },
        "javascript.4": {
            "type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
            "name": "prepareGetToken",
            "method": "Execute",
            "parameters": [
                {
                    "name": "data",
                    "type": "jsonpath",
                    "value": "$",
                    "metaName": "Data",
                    "metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
                },
                {
                    "name": "code",
                    "type": "string",
                    "value": "\"let dataToencode = data.env.CLIENT_ID+':'+data.env.CLIENT_SECRET;\\n  let buff = new Buffer(dataToencode);\\n  let encodedData = buff.toString('base64');\\n  \\n  let url = 'https://login.axway.com/auth/realms/Broker/protocol/openid-connect/token';\\n  let headers = {\\n    Authorization : 'Basic '+encodedData,\\n    'Content-Type': 'application/x-www-form-urlencoded'\\n  };\\n  let body = {\\n    grant_type: 'client_credentials'\\n  };\\n  console.log(\\\"**********************************\\\");\\n  console.log(headers);\\n  console.log(\\\"**********************************\\\");\\n  return {url,headers,body};\"",
                    "metaName": "Code",
                    "metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
                }
            ],
            "outputs": {
                "next": {
                    "context": "$.result",
                    "routes": [
                        "rest.3"
                    ],
                    "metaName": "Next"
                },
                "error": {
                    "context": "$.error",
                    "routes": [],
                    "metaName": "Error"
                }
            },
            "metaMethod": "Execute"
        },
        "rest.3": {
            "type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
            "name": "getToken",
            "method": "post",
            "parameters": [
                {
                    "name": "body",
                    "type": "jsonpath",
                    "value": "$.result.body",
                    "metaName": "Body",
                    "metaDescription": "The content to send."
                },
                {
                    "name": "url",
                    "type": "jsonpath",
                    "value": "$.result.url",
                    "metaName": "URL",
                    "metaDescription": "The target URL."
                },
                {
                    "name": "headers",
                    "type": "jsonpath",
                    "value": "$.result.headers",
                    "metaName": "Headers",
                    "metaDescription": "The HTTP headers to set."
                }
            ],
            "outputs": {
                "2xx": {
                    "routes": [
                        "javascript.3"
                    ],
                    "context": "$.getTokenResponse",
                    "metaName": "2XX"
                },
                "3xx": {
                    "routes": [],
                    "context": "$.response",
                    "metaName": "3XX"
                },
                "4xx": {
                    "routes": [],
                    "context": "$.response",
                    "metaName": "4XX"
                },
                "5xx": {
                    "routes": [],
                    "context": "$.response",
                    "metaName": "5XX"
                },
                "error": {
                    "routes": [],
                    "context": "$.error",
                    "metaName": "Error"
                }
            },
            "metaMethod": "POST"
        },
        "javascript.5": {
            "type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
            "name": "prepareCreateIncident",
            "method": "Execute",
            "parameters": [
                {
                    "name": "data",
                    "type": "jsonpath",
                    "value": "$",
                    "metaName": "Data",
                    "metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
                },
                {
                    "name": "code",
                    "type": "string",
                    "value": "\"// customfield_10050 = Jira custom field 'Subscription Self Link'\\n  // customfield_10052 = Jira custom field 'Subscription Name'\\n  \\n  let productName=data.request.body.payload.spec.product;\\n  let productUrl=data.env.API_CENTRAL_URL+'/products/details/'+data.request.body.payload.spec.product;\\n  let subscriptionName=data.request.body.payload.title;\\n  let subscriptionUrl=data.env.API_CENTRAL_URL+'/marketplace/subscriptions';\\n  let requestorName=data.getUserResponse.body.result.firstname+' '+data.getUserResponse.body.result.lastname;\\n  let requestorEmail=data.getUserResponse.body.result.email;\\n  let requestorEmailUrl='mailTo:'+data.getUserResponse.body.result.email;\\n  let selfLink = data.env.API_CENTRAL_URL+'/apis'+data.request.body.payload.metadata.selfLink+'/approval';\\n  \\n  let dataToencode = data.env.JIRA_USERNAME+':'+data.env.JIRA_API_TOKEN;\\n  let buff = new Buffer(dataToencode);\\n  let encodedData = buff.toString('base64');\\n  \\n  let url = data.env.JIRA_URL+'/rest/api/2/issue';\\n  \\n  let headers = {\\n    Authorization : 'Basic '+encodedData,\\n    'Content-Type': 'application/json'\\n  };\\n  \\n  let description = 'A marketplace product subscription request has been made. Details are below:'+'\\\\r'+'\\\\r';\\n  description += 'Subscription: '+subscriptionName+'\\\\r';\\n  description += 'Subscription Link: '+subscriptionUrl+'\\\\r';\\n  description += 'Product: '+productName+'\\\\r';\\n  description += 'Product Link: '+productUrl+'\\\\r';\\n  description += 'Requestor: '+requestorName+'\\\\r';\\n  description += 'Requestor E-mail: '+requestorEmail+'\\\\r';\\n  description += '\\\\r';\\n  description += \\\"In order to approve or reject the subscription request, set the Approve/Reject field, add a comment/reason and close the incident.\\\\r\\\\r\\\";\\n  description += \\\"You can review the susbscription request here:\\\\n\\\"+subscriptionUrl+\\\"\\\\n\\\\n\\\";\\n  \\n  let body = {\\n    \\\"fields\\\": {\\n      \\\"summary\\\": \\\"Marketplace product subscription approval request: \\\"+subscriptionName,\\n      \\\"issuetype\\\": {\\n        \\\"name\\\": \\\"Demand\\\"\\n      },\\n      \\\"project\\\": {\\n        \\\"key\\\": data.env.JIRA_PROJECT_KEY\\n      },\\n      \\\"description\\\": description,\\n      \\\"customfield_10050\\\": selfLink,\\n      \\\"customfield_10052\\\": subscriptionName\\n    }\\n  };\\n  \\n  console.log(\\\"*****************************\\\");\\n    console.log(url);\\n  console.log(\\\"*****************************\\\");\\n  \\n  return {url, headers, body};\"",
                    "metaName": "Code",
                    "metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
                }
            ],
            "outputs": {
                "next": {
                    "context": "$.result",
                    "routes": [
                        "rest.4"
                    ],
                    "metaName": "Next"
                },
                "error": {
                    "context": "$.error",
                    "routes": [],
                    "metaName": "Error"
                }
            },
            "metaMethod": "Execute"
        },
        "rest.4": {
            "type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
            "name": "createIncident",
            "method": "post",
            "parameters": [
                {
                    "name": "body",
                    "type": "jsonpath",
                    "value": "$.result.body",
                    "metaName": "Body",
                    "metaDescription": "The content to send."
                },
                {
                    "name": "url",
                    "type": "jsonpath",
                    "value": "$.result.url",
                    "metaName": "URL",
                    "metaDescription": "The target URL."
                },
                {
                    "name": "headers",
                    "type": "jsonpath",
                    "value": "$.result.headers",
                    "metaName": "Headers",
                    "metaDescription": "The HTTP headers to set."
                }
            ],
            "outputs": {
                "2xx": {
                    "routes": [
                        "javascript.2"
                    ],
                    "context": "$.createIncidentResponse",
                    "metaName": "2XX"
                },
                "3xx": {
                    "routes": [],
                    "context": "$.response",
                    "metaName": "3XX"
                },
                "4xx": {
                    "routes": [],
                    "context": "$.response",
                    "metaName": "4XX"
                },
                "5xx": {
                    "routes": [],
                    "context": "$.response",
                    "metaName": "5XX"
                },
                "error": {
                    "routes": [],
                    "context": "$.error",
                    "metaName": "Error"
                }
            },
            "metaMethod": "POST"
        }
    }
}