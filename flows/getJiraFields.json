{
	"schemaVersion": "4",
	"info": {
		"name": "getJiraFields",
		"description": ""
	},
	"parameter": {
		"properties": {
			"request": {
				"description": "The request"
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false
	},
	"start": "invoke-flow.1",
	"nodes": {
		"invoke-flow.1": {
			"type": "nodehandler://@axway/api-builder-plugin-invoke-flow/invoke-flow",
			"name": "prepareJiraHeaders",
			"method": "invokeFlow",
			"parameters": [
				{
					"name": "id",
					"type": "string",
					"value": "\"prepareJiraHeaders\"",
					"metaName": "Flow Listener ID",
					"metaDescription": "The ID of a previously configured `Flow Listener`."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"javascript.1"
					],
					"context": "$.flowResponse",
					"metaName": "Next"
				},
				"error": {
					"routes": [],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Invoke Flow"
		},
		"javascript.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "prepareGetFields",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let url = data.env.JIRA_URL+'/rest/api/2/field';\\n\\n  return {url};\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"rest.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "getFields",
			"method": "get",
			"parameters": [
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.result.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				},
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.flowResponse",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"invoke-flow-response.1"
					],
					"context": "$.response",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"invoke-flow-response.2"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"invoke-flow-response.2"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"invoke-flow-response.2"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"invoke-flow-response.2"
					],
					"context": "$.response",
					"metaName": "Error"
				}
			},
			"metaMethod": "GET"
		},
		"invoke-flow-response.1": {
			"type": "nodehandler://@axway/api-builder-plugin-invoke-flow/invoke-flow-response",
			"name": "Set Response",
			"method": "setResponse",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.response.body"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": []
				},
				"error": {
					"context": "$.error",
					"routes": []
				}
			}
		},
		"invoke-flow-response.2": {
			"type": "nodehandler://@axway/api-builder-plugin-invoke-flow/invoke-flow-response",
			"name": "Set Response",
			"method": "setResponse",
			"parameters": [
				{
					"name": "isError",
					"type": "boolean",
					"value": "true"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": []
				},
				"error": {
					"context": "$.error",
					"routes": []
				}
			}
		}
	}
}